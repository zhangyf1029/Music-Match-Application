{"version":3,"sources":["../../../../../../src/components/menu/components/list/components/item.js"],"names":["React","PropTypes","classnames","List","Element","MenuListItem","children","active","className","ref","domRef","props","Children","toArray","length","only","type","child","title","cloneElement","undefined","defaultProps","renderAs"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA;;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAMf;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFIC,GAEJ,QAFJC,MAEI;AAAA,MADDC,KACC;;AACJ,MACE,OAAOL,QAAP,KAAoB,QAApB,IACAN,KAAK,CAACY,QAAN,CAAeC,OAAf,CAAuBP,QAAvB,EAAiCQ,MAAjC,KAA4C,CAD5C,IAEAd,KAAK,CAACY,QAAN,CAAeG,IAAf,CAAoBT,QAApB,EAA8BU,IAA9B,KAAuCb,IAHzC,EAIE;AACA,QAAMc,KAAK,GAAGjB,KAAK,CAACY,QAAN,CAAeG,IAAf,CAAoBT,QAApB,CAAd;AACA,wBACE;AAAI,MAAA,GAAG,EAAEG;AAAT,oBACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAEP,UAAU,CAACM,SAAD,EAAY;AAAE,qBAAaD;AAAf,OAAZ;AADvB,OAEMI,KAFN,GAIGM,KAAK,CAACN,KAAN,CAAYO,KAJf,CADF,eAOGlB,KAAK,CAACmB,YAAN,CAAmBF,KAAnB,EAA0B;AAAEC,MAAAA,KAAK,EAAEE;AAAT,KAA1B,CAPH,CADF;AAWD;;AAED,sBACE;AAAI,IAAA,GAAG,EAAEX;AAAT,kBACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAEP,UAAU,CAACM,SAAD,EAAY;AAAE,mBAAaD;AAAf,KAAZ;AADvB,KAEMI,KAFN,GAIGL,QAJH,CADF,CADF;AAUD,CApCD;;AA+CAD,YAAY,CAACgB,YAAb,GAA4B;AAC1BC,EAAAA,QAAQ,EAAE;AADgB,CAA5B;AAIA,eAAejB,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n/* eslint-disable-next-line import/no-cycle */\nimport List from '../list';\n\nimport Element from '../../../../element';\n\nconst MenuListItem = ({\n  children,\n  active,\n  className,\n  domRef: ref,\n  ...props\n}) => {\n  if (\n    typeof children !== 'string' &&\n    React.Children.toArray(children).length === 1 &&\n    React.Children.only(children).type === List\n  ) {\n    const child = React.Children.only(children);\n    return (\n      <li ref={ref}>\n        <Element\n          className={classnames(className, { 'is-active': active })}\n          {...props}\n        >\n          {child.props.title}\n        </Element>\n        {React.cloneElement(child, { title: undefined })}\n      </li>\n    );\n  }\n\n  return (\n    <li ref={ref}>\n      <Element\n        className={classnames(className, { 'is-active': active })}\n        {...props}\n      >\n        {children}\n      </Element>\n    </li>\n  );\n};\n\nMenuListItem.propTypes = {\n  active: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nMenuListItem.defaultProps = {\n  renderAs: 'a',\n};\n\nexport default MenuListItem;\n"],"file":"item.js"}