{"version":3,"sources":["../../../src/components/element/element.js"],"names":["React","PropTypes","classnames","normalizeAlign","buildResponsiveness","currentViewport","display","textAlign","textSize","only","invisible","suffix","useElementClassNames","textColor","backgroundColor","colorVariant","flexDirection","flexWrap","justifyContent","alignContent","alignItems","flexGrow","ratio","clearfix","paddingless","pull","marginless","overlay","clipped","radiusless","shadowless","unselectable","clickable","srOnly","m","mt","mr","mb","ml","mx","my","p","pt","pr","pb","pl","px","py","textWeight","textTransform","italic","textFamily","mobile","tablet","desktop","widescreen","fullhd","touch","untilWidescreen","untilFullhd","props","Element","className","renderAs","domRef","children","allProps","RenderAs","classNames","undefined","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { normalizeAlign } from '../../services/normalizer';\n\nconst buildResponsiveness = (\n  currentViewport,\n  { display, textAlign, textSize, only, invisible } = {},\n) => {\n  const suffix = only ? '-only' : '';\n\n  return classnames({\n    [`is-${display}-${currentViewport}${suffix}`]: display,\n    [`has-text-${normalizeAlign(\n      textAlign,\n    )}-${currentViewport}${suffix}`]: textAlign,\n    [`is-size-${textSize}-${currentViewport}${suffix}`]: textSize,\n    [`is-invisible-${currentViewport}${suffix}`]: invisible,\n  });\n};\n\nexport const useElementClassNames = ({\n  textColor,\n  backgroundColor,\n  colorVariant,\n  flexDirection,\n  flexWrap,\n  justifyContent,\n  alignContent,\n  alignItems,\n  flexGrow,\n  ratio,\n  clearfix,\n  paddingless,\n  pull,\n  marginless,\n  overlay,\n  clipped,\n  radiusless,\n  shadowless,\n  unselectable,\n  invisible,\n  clickable,\n  srOnly,\n  display,\n  m,\n  mt,\n  mr,\n  mb,\n  ml,\n  mx,\n  my,\n  p,\n  pt,\n  pr,\n  pb,\n  pl,\n  px,\n  py,\n  textWeight,\n  textTransform,\n  italic,\n  textSize,\n  textAlign,\n  textFamily,\n  // responsive\n  mobile,\n  tablet,\n  desktop,\n  widescreen,\n  fullhd,\n  touch,\n  untilWidescreen,\n  untilFullhd,\n  ...props\n}) => [\n  classnames(\n    {\n      [`has-text-${textColor}`]: textColor,\n      [`has-background-${backgroundColor}`]: backgroundColor,\n      [`is-${colorVariant}`]: colorVariant,\n      [`is-flex-direction-${flexDirection}`]: flexDirection,\n      [`is-flex-wrap-${flexWrap}`]: flexWrap,\n      [`is-justify-content-${justifyContent}`]: justifyContent,\n      [`is-align-content-${alignContent}`]: alignContent,\n      [`is-align-items-${alignItems}`]: alignItems,\n      [`is-flex-grow-${flexGrow}`]: flexGrow,\n      'is-clearfix': clearfix,\n      [`is-pulled-${pull}`]: pull,\n      'is-marginless': marginless,\n      'is-paddingless': paddingless,\n      'is-overlay': overlay,\n      'is-clipped': clipped,\n      'is-radiusless': radiusless,\n      'is-shadowless': shadowless,\n      'is-unselectable': unselectable,\n      [`is-${display}`]: display,\n      'is-invisible': invisible,\n      'is-sr-only': srOnly,\n      'is-clickable': clickable,\n      [`m-${m}`]: m,\n      [`mt-${mt}`]: mt,\n      [`mr-${mr}`]: mr,\n      [`mb-${mb}`]: mb,\n      [`ml-${ml}`]: ml,\n      [`mx-${mx}`]: mx,\n      [`my-${my}`]: my,\n      [`p-${p}`]: p,\n      [`pt-${pt}`]: pt,\n      [`pr-${pr}`]: pr,\n      [`pb-${pb}`]: pb,\n      [`pl-${pl}`]: pl,\n      [`px-${px}`]: px,\n      [`py-${py}`]: py,\n      [`has-text-${normalizeAlign(textAlign)}`]: textAlign,\n      [`has-text-weight-${textWeight}`]: textWeight,\n      [`is-size-${textSize}`]: textSize,\n      [`is-${textTransform}`]: textTransform,\n      [`is-family-${textFamily}`]: textFamily,\n      'is-italic': italic,\n    },\n    buildResponsiveness('mobile', mobile),\n    buildResponsiveness('tablet', tablet),\n    buildResponsiveness('desktop', desktop),\n    buildResponsiveness('widescreen', widescreen),\n    buildResponsiveness('fullhd', fullhd),\n    buildResponsiveness('touch', touch),\n    buildResponsiveness('until-widescreen', untilWidescreen),\n    buildResponsiveness('until-fullhd', untilFullhd),\n  ),\n  props,\n];\n\nconst Element = ({ className, renderAs, domRef, children, ...allProps }) => {\n  const RenderAs = renderAs;\n  const [classNames, props] = useElementClassNames(allProps);\n  return (\n    <RenderAs\n      ref={domRef}\n      className={classnames(className, classNames) || undefined}\n      {...props}\n    >\n      {children}\n    </RenderAs>\n  );\n};\n\nElement.propTypes = {\n  alignContent: PropTypes.oneOf([\n    'flex-start',\n    'flex-end',\n    'center',\n    'space-around',\n    'space-between',\n    'space-evenly',\n    'stretch',\n    'start',\n    'end',\n    'baseline',\n  ]),\n  alignItems: PropTypes.oneOf([\n    'auto',\n    'flex-start',\n    'flex-end',\n    'center',\n    'baseline',\n    'stretch',\n  ]),\n  backgroundColor: PropTypes.oneOfType([\n    PropTypes.oneOf([\n      'primary',\n      'link',\n      'info',\n      'success',\n      'warning',\n      'danger',\n      'dark',\n      'text',\n    ]),\n    PropTypes.string,\n  ]),\n  className: PropTypes.string,\n  clearfix: PropTypes.bool,\n  clickable: PropTypes.bool,\n  clipped: PropTypes.bool,\n  colorVariant: PropTypes.oneOf(['light', 'dark']),\n  display: PropTypes.oneOf([\n    'block',\n    'flex',\n    'inline',\n    'inline-block',\n    'inline-flex',\n    'relative',\n    'hidden',\n  ]),\n  /**\n   * Reference to Dom element\n   */\n  domRef: PropTypes.object,\n  // Flex\n  flexDirection: PropTypes.oneOf([\n    'row',\n    'row-reverse',\n    'column',\n    'column-reverse',\n  ]),\n  flexWrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n  flexGrow: PropTypes.oneOf([0, 1, 2, 3, 4, 5]),\n  italic: PropTypes.bool,\n  invisible: PropTypes.bool,\n  justifyContent: PropTypes.oneOf([\n    'flex-start',\n    'flex-end',\n    'center',\n    'space-around',\n    'space-between',\n    'space-evenly',\n    'start',\n    'end',\n    'left',\n    'right',\n  ]),\n  m: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  mt: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  mr: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  mb: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  ml: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  mx: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  my: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  marginless: PropTypes.bool,\n  overlay: PropTypes.bool,\n  paddingless: PropTypes.bool,\n  p: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  pt: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  pr: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  pb: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  pl: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  px: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  py: PropTypes.oneOfType([\n    PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  pull: PropTypes.oneOf([undefined, 'right', 'left']),\n  radiusless: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    /**\n     * A string with the name of an Html element or a React Component\n     */\n    PropTypes.object,\n  ]),\n  shadowless: PropTypes.bool,\n  textAlign: PropTypes.oneOf(['center', 'justify', 'left', 'right']),\n  textColor: PropTypes.oneOfType([\n    PropTypes.oneOf([\n      'primary',\n      'link',\n      'info',\n      'success',\n      'warning',\n      'danger',\n      'dark',\n      'text',\n    ]),\n    PropTypes.string,\n  ]),\n  textFamily: PropTypes.string,\n  textSize: PropTypes.oneOfType([\n    PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7]),\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  textTransform: PropTypes.oneOf(['capitalized', 'lowercase', 'uppercase']),\n  textWeight: PropTypes.oneOf(['light', 'normal', 'semibold', 'bold']),\n  unselectable: PropTypes.bool,\n\n  mobile: PropTypes.shape({\n    textSize: PropTypes.oneOfType([\n      PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7]),\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    textAlign: PropTypes.oneOf(['center', 'justify', 'left', 'right']),\n    display: PropTypes.oneOf([\n      'block',\n      'flex',\n      'inline',\n      'inline-block',\n      'inline-flex',\n      'hidden',\n    ]),\n  }),\n  tablet: PropTypes.shape({\n    textSize: PropTypes.oneOfType([\n      PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7]),\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    textAlign: PropTypes.oneOf(['center', 'justify', 'left', 'right']),\n    display: PropTypes.oneOf([\n      'block',\n      'flex',\n      'inline',\n      'inline-block',\n      'inline-flex',\n      'hidden',\n    ]),\n    only: PropTypes.bool,\n  }),\n  desktop: PropTypes.shape({\n    textSize: PropTypes.oneOfType([\n      PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7]),\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    textAlign: PropTypes.oneOf(['center', 'justify', 'left', 'right']),\n    display: PropTypes.oneOf([\n      'block',\n      'flex',\n      'inline',\n      'inline-block',\n      'inline-flex',\n      'hidden',\n    ]),\n    only: PropTypes.bool,\n  }),\n  widescreen: PropTypes.shape({\n    textSize: PropTypes.oneOfType([\n      PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7]),\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    textAlign: PropTypes.oneOf(['center', 'justify', 'left', 'right']),\n    display: PropTypes.oneOf([\n      'block',\n      'flex',\n      'inline',\n      'inline-block',\n      'inline-flex',\n      'hidden',\n    ]),\n    only: PropTypes.bool,\n  }),\n  fullhd: PropTypes.shape({\n    textSize: PropTypes.oneOfType([\n      PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7]),\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    textAlign: PropTypes.oneOf(['center', 'justify', 'left', 'right']),\n    display: PropTypes.oneOf([\n      'block',\n      'flex',\n      'inline',\n      'inline-block',\n      'inline-flex',\n      'hidden',\n    ]),\n  }),\n  touch: PropTypes.shape({\n    textSize: PropTypes.oneOfType([\n      PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7]),\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    textAlign: PropTypes.oneOf(['center', 'justify', 'left', 'right']),\n    display: PropTypes.oneOf([\n      'block',\n      'flex',\n      'inline',\n      'inline-block',\n      'inline-flex',\n      'hidden',\n    ]),\n  }),\n  untilWidrscreen: PropTypes.shape({\n    textSize: PropTypes.oneOfType([\n      PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7]),\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    textAlign: PropTypes.oneOf(['center', 'justify', 'left', 'right']),\n    display: PropTypes.oneOf([\n      'block',\n      'flex',\n      'inline',\n      'inline-block',\n      'inline-flex',\n      'hidden',\n    ]),\n  }),\n  untilFullhd: PropTypes.shape({\n    textSize: PropTypes.oneOfType([\n      PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7]),\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    textAlign: PropTypes.oneOf(['centered', 'justify', 'left', 'right']),\n    display: PropTypes.oneOf([\n      'block',\n      'flex',\n      'inline',\n      'inline-block',\n      'inline-flex',\n      'hidden',\n    ]),\n  }),\n};\n\nElement.defaultProps = {\n  renderAs: 'div',\n};\n\nexport default Element;\n"],"file":"element.js"}