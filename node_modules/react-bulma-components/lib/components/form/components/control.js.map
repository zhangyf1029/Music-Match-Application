{"version":3,"sources":["../../../../src/components/form/components/control.js"],"names":["React","PropTypes","classnames","Element","Icon","useFieldContext","Button","Control","children","className","fullwidth","loading","iconType","props","context","isIcon","child","type","align","updatedChildren","Children","map","cloneElement","size","icons","toArray","filter","reduce","acc","icon","iconLeft","iconRight","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAOV;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,OAAO,GAAGT,eAAe,EAA/B;;AAEA,MAAMU,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD;AAAA,WACbA,KAAK,CAACC,IAAN,MAAgBL,QAAQ,IAAIR,IAA5B,MACCY,KAAK,CAACH,KAAN,CAAYK,KAAZ,KAAsB,MAAtB,IAAgCF,KAAK,CAACH,KAAN,CAAYK,KAAZ,KAAsB,OADvD,CADa;AAAA,GAAf;;AAIA,MAAMC,eAAe,GAAGnB,KAAK,CAACoB,QAAN,CAAeC,GAAf,CAAmBb,QAAnB,EAA6B,UAACQ,KAAD,EAAW;AAC9D,QAAI,CAACD,MAAM,CAACC,KAAD,CAAP,IAAkBA,KAAK,CAACC,IAAN,KAAeX,MAArC,EAA6C;AAC3C,aAAOU,KAAP;AACD;;AACD,wBAAOhB,KAAK,CAACsB,YAAN,CAAmBN,KAAnB,EAA0B;AAC/BO,MAAAA,IAAI,EAAEP,KAAK,CAACH,KAAN,CAAYU,IAAZ,IAAoBT,OAAO,CAACS;AADH,KAA1B,CAAP;AAGD,GAPuB,CAAxB;AASA,MAAMC,KAAK,GAAGxB,KAAK,CAACoB,QAAN,CAAeK,OAAf,CAAuBN,eAAvB,EACXO,MADW,CACJX,MADI,EAEXY,MAFW,CAGV,UAACC,GAAD,EAAMC,IAAN;AAAA,WAAgB;AACdC,MAAAA,QAAQ,EAAEF,GAAG,CAACE,QAAJ,IAAgBD,IAAI,CAAChB,KAAL,CAAWK,KAAX,KAAqB,MADjC;AAEda,MAAAA,SAAS,EAAEH,GAAG,CAACG,SAAJ,IAAiBF,IAAI,CAAChB,KAAL,CAAWK,KAAX,KAAqB;AAFnC,KAAhB;AAAA,GAHU,EAOV;AAAEY,IAAAA,QAAQ,EAAE,KAAZ;AAAmBC,IAAAA,SAAS,EAAE;AAA9B,GAPU,CAAd;AASA,sBACE,oBAAC,OAAD,eACMlB,KADN;AAEE,IAAA,SAAS,EAAEX,UAAU,CAAC,SAAD,EAAYO,SAAZ,EAAuB;AAC1C,qBAAeC,SAD2B;AAE1C,wBAAkBc,KAAK,CAACM,QAFkB;AAG1C,yBAAmBN,KAAK,CAACO,SAHiB;AAI1C,oBAAcpB;AAJ4B,KAAvB;AAFvB,MASGQ,eATH,CADF;AAaD,CA7CD;;AA6DAZ,OAAO,CAACyB,YAAR,GAAuB,EAAvB;AAEA,eAAezB,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Element from '../../element';\nimport Icon from '../../icon';\nimport useFieldContext from './field/context';\nimport Button from '../../button';\n\nconst Control = ({\n  children,\n  className,\n  fullwidth,\n  loading,\n  iconType,\n  ...props\n}) => {\n  const context = useFieldContext();\n\n  const isIcon = (child) =>\n    child.type === (iconType || Icon) &&\n    (child.props.align === 'left' || child.props.align === 'right');\n\n  const updatedChildren = React.Children.map(children, (child) => {\n    if (!isIcon(child) && child.type !== Button) {\n      return child;\n    }\n    return React.cloneElement(child, {\n      size: child.props.size || context.size,\n    });\n  });\n\n  const icons = React.Children.toArray(updatedChildren)\n    .filter(isIcon)\n    .reduce(\n      (acc, icon) => ({\n        iconLeft: acc.iconLeft || icon.props.align === 'left',\n        iconRight: acc.iconRight || icon.props.align === 'right',\n      }),\n      { iconLeft: false, iconRight: false },\n    );\n  return (\n    <Element\n      {...props}\n      className={classnames('control', className, {\n        'is-expanded': fullwidth,\n        'has-icons-left': icons.iconLeft,\n        'has-icons-right': icons.iconRight,\n        'is-loading': loading,\n      })}\n    >\n      {updatedChildren}\n    </Element>\n  );\n};\n\nControl.propTypes = {\n  loading: PropTypes.bool,\n  iconType: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n  /**\n   * When true and the `Field` container has the `kind` props set the Control\n   * will use all available space instead of adjusting to the element inside\n   */\n  fullwidth: PropTypes.bool,\n};\n\nControl.defaultProps = {};\n\nexport default Control;\n"],"file":"control.js"}