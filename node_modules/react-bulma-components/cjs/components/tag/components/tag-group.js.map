{"version":3,"sources":["../../../../src/components/tag/components/tag-group.js"],"names":["TagGroup","children","className","gapless","hasAddons","props","defaultProps","renderAs"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,SAAb,QAAaA,SAAb;AAAA,MAAwBC,OAAxB,QAAwBA,OAAxB;AAAA,MAAiCC,SAAjC,QAAiCA,SAAjC;AAAA,MAA+CC,KAA/C;;AAAA,sBACf,gCAAC,mBAAD,eACMA,KADN;AAEE,IAAA,SAAS,EAAE,4BAAW,MAAX,EAAmBH,SAAnB,EAA8B;AACvC,oBAAcC,OAAO,IAAIC;AADc,KAA9B;AAFb,MAMGH,QANH,CADe;AAAA,CAAjB;;AAwBAD,QAAQ,CAACM,YAAT,GAAwB;AACtBC,EAAAA,QAAQ,EAAE;AADY,CAAxB;eAIeP,Q","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Element from '../../element';\n\nconst TagGroup = ({ children, className, gapless, hasAddons, ...props }) => (\n  <Element\n    {...props}\n    className={classnames('tags', className, {\n      'has-addons': gapless || hasAddons,\n    })}\n  >\n    {children}\n  </Element>\n);\n\nTagGroup.propTypes = {\n  hasAddons: PropTypes.bool,\n  /**\n   * deprecated: use hasAddons\n   */\n  gapless: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nTagGroup.defaultProps = {\n  renderAs: 'span',\n};\n\nexport default TagGroup;\n"],"file":"tag-group.js"}